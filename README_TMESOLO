Exercice 1 :
J'ai modifié le fichier controleur/controleur.py
La fonctionnalité du crayon était déjà présente grâce à un attribut crayon pour le Robot_simple et une fonction outil_crayon que j'avais implémenté dans le fichier gui/viewer.py.
L'attribut crayon est à True par défaut habituellement car ça permet de mieux visualiser les déplacements du robot.
J'ai simplement ajouté une stratégie PointilleAction qui permet d'exploiter cet attribut.
Elle prend une distance à parcourir en paramètre (en plus du robot) et fait faire des pointillés au robot sur cette distance.
On peut l'utiliser avec la séquence Exo1.


Attention la rotation du robot prend du temps ! (On pourrait augmenter la vitesse de rotation mais la rotation serait alors forcément moins précise).

Exercice 2:
Q1.
Je n'ai pas ajouté de stratégie mais une nouvelle séquence Exo2_TriangleEqui dans le fichier controleur.
Q2.
J'ai ajouté la séquence Exo2_Polygone dans le fichier controleur.
Q3.
Pour cette question c'est compliqué car les fonctionnalités dont j'aurais besoin ne sont pas encore implémentés (j'allais travailler dessus ce soir et demain).
Mais ce que j'ai fait et que j'aurais voulu finir c'est ajouter un attribut bool au robot proche_mur et une méthode dans l'arène qui modifie cet attribut si le robot est proche d'un des murs.
Puis j'aurais eu besoin de ConditionActions et StopAction dans le fichier controleur en plus d'une stratégie qui Combine ConditionActions et SequenceActions.
Et j'aurais pu faire la stratégie demandée.


